{"map":"{\"version\":3,\"sources\":[\"/home/react-boilerplate-cors/app/utils/checkStore.js\",\"/home/react-boilerplate-cors/app/utils/reducerInjectors.js\",\"/home/react-boilerplate-cors/app/utils/injectReducer.js\",\"/home/react-boilerplate-cors/app/utils/constants.js\",\"/home/react-boilerplate-cors/app/utils/sagaInjectors.js\",\"/home/react-boilerplate-cors/app/utils/injectSaga.js\",\"/home/react-boilerplate-cors/app/components/H1/index.js\",\"/home/react-boilerplate-cors/app/components/List/Ul.js\",\"/home/react-boilerplate-cors/app/components/List/Wrapper.js\",\"/home/react-boilerplate-cors/app/components/List/index.js\",\"/home/react-boilerplate-cors/app/components/ListItem/Item.js\",\"/home/react-boilerplate-cors/app/components/ListItem/Wrapper.js\",\"/home/react-boilerplate-cors/app/components/ListItem/index.js\",\"/home/react-boilerplate-cors/app/containers/CryptoListItem/Wrapper.js\",\"/home/react-boilerplate-cors/app/containers/CryptoListItem/index.js\",\"/home/react-boilerplate-cors/app/components/CryptoList/index.js\",\"/home/react-boilerplate-cors/app/containers/HomePage/constants.js\",\"/home/react-boilerplate-cors/app/containers/HomePage/reducer.js\",\"/home/react-boilerplate-cors/app/containers/HomePage/selectors.js\",\"/home/react-boilerplate-cors/app/containers/HomePage/actions.js\",\"/home/react-boilerplate-cors/app/utils/request.js\",\"/home/react-boilerplate-cors/app/containers/HomePage/saga.js\",\"/home/react-boilerplate-cors/app/containers/HomePage/index.js\"],\"names\":[\"checkStore\",\"store\",\"shape\",\"dispatch\",\"isFunction_default\",\"a\",\"subscribe\",\"getState\",\"replaceReducer\",\"runSaga\",\"injectedReducers\",\"isObject_default\",\"injectedSagas\",\"invariant\",\"conformsTo_default\",\"injectReducerFactory\",\"isValid\",\"key\",\"reducer\",\"isString_default\",\"isEmpty_default\",\"Reflect\",\"has\",\"createReducer\",\"getInjectors\",\"injectReducer\",\"useInjectReducer\",\"_ref2\",\"context\",\"React\",\"useContext\",\"ReactReduxContext\",\"useEffect\",\"DAEMON\",\"ONCE_TILL_UNMOUNT\",\"allowedModes\",\"checkKey\",\"checkDescriptor\",\"descriptor\",\"saga\",\"mode\",\"includes\",\"injectSagaFactory\",\"arguments\",\"length\",\"undefined\",\"args\",\"newDescriptor\",\"_objectSpread\",\"hasSaga\",\"task\",\"ejectSagaFactory\",\"cancel\",\"injectSaga\",\"ejectSaga\",\"useInjectSaga\",\"injectors\",\"H1\",\"styled\",\"h1\",\"withConfig\",\"displayName\",\"componentId\",\"Ul\",\"ul\",\"Wrapper\",\"div\",\"_jsx\",\"List\",\"props\",\"ComponentToRender\",\"component\",\"content\",\"List_ref\",\"items\",\"map\",\"item\",\"concat\",\"symbol\",\"List_Wrapper\",\"List_Ul\",\"Item\",\"li\",\"ListItem\",\"ListItem_jsx\",\"ListItem_Wrapper\",\"ListItem_Item\",\"CryptoListItem\",\"CryptoListItem_jsx\",\"CryptoListItem_Wrapper\",\"index_es\",\"value\",\"lastPrice\",\"components_ListItem\",\"CryptoList_jsx\",\"components_List\",\"LoadingIndicator\",\"CryptoList\",\"_ref\",\"loading\",\"error\",\"cryptos\",\"CryptoList_ref2\",\"_ref3\",\"LOAD_CRYPTOS_ACTION\",\"LOAD_CRYPTOS_SUCCESS_ACTION\",\"LOAD_CRYPTOS_ERROR_ACTION\",\"CRYPTO_SYMBOLS\",\"initialState\",\"homeReducer\",\"state\",\"action\",\"produce\",\"draft\",\"type\",\"selectHome\",\"home\",\"loadCryptosSuccessAction\",\"parseJSON\",\"response\",\"status\",\"json\",\"checkStatus\",\"Error\",\"statusText\",\"request\",\"url\",\"options\",\"fetch\",\"then\",\"serialize\",\"params\",\"prefix\",\"Object\",\"keys\",\"reduce\",\"accum\",\"constructor\",\"Array\",\"request_typeof\",\"moreParams\",\"push\",\"encodeURIComponent\",\"join\",\"getCryptos\",\"watchActions\",\"requestURL\",\"regeneratorRuntime\",\"wrap\",\"_context\",\"prev\",\"next\",\"symbols\",\"JSON\",\"stringify\",\"call\",\"sent\",\"put\",\"t0\",\"stop\",\"_marked\",\"_context2\",\"takeLatest\",\"_marked2\",\"HomePage_jsx\",\"Helmet\",\"name\",\"components_H1\",\"HomePage\",\"onLoadCryptos\",\"cryptoListProps\",\"HomePage_ref2\",\"HomePage_ref3\",\"react_default\",\"createElement\",\"components_CryptoList\",\"mapStateToProps\",\"createStructuredSelector\",\"createSelector\",\"homeState\",\"mapDispatchToProps\",\"withConnect\",\"connect\",\"compose\",\"memo\"],\"mappings\":\"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\",\"sourcesContent\":[\"import { conformsTo, isFunction, isObject } from 'lodash';\\nimport invariant from 'invariant';\\n\\n/**\\n * Validate the shape of redux store\\n */\\nexport default function checkStore(store) {\\n  const shape = {\\n    dispatch: isFunction,\\n    subscribe: isFunction,\\n    getState: isFunction,\\n    replaceReducer: isFunction,\\n    runSaga: isFunction,\\n    injectedReducers: isObject,\\n    injectedSagas: isObject,\\n  };\\n  invariant(\\n    conformsTo(store, shape),\\n    '(app/utils...) injectors: Expected a valid redux store',\\n  );\\n}\\n\",\"import invariant from 'invariant';\\nimport { isEmpty, isFunction, isString } from 'lodash';\\n\\nimport checkStore from './checkStore';\\nimport createReducer from '../reducers';\\n\\nexport function injectReducerFactory(store, isValid) {\\n  return function injectReducer(key, reducer) {\\n    if (!isValid) checkStore(store);\\n\\n    invariant(\\n      isString(key) && !isEmpty(key) && isFunction(reducer),\\n      '(app/utils...) injectReducer: Expected `reducer` to be a reducer function',\\n    );\\n\\n    // Check `store.injectedReducers[key] === reducer` for hot reloading when a key is the same but a reducer is different\\n    if (\\n      Reflect.has(store.injectedReducers, key) &&\\n      store.injectedReducers[key] === reducer\\n    )\\n      return;\\n\\n    store.injectedReducers[key] = reducer; // eslint-disable-line no-param-reassign\\n    store.replaceReducer(createReducer(store.injectedReducers));\\n  };\\n}\\n\\nexport default function getInjectors(store) {\\n  checkStore(store);\\n\\n  return {\\n    injectReducer: injectReducerFactory(store, true),\\n  };\\n}\\n\",\"import React from 'react';\\nimport hoistNonReactStatics from 'hoist-non-react-statics';\\nimport { ReactReduxContext } from 'react-redux';\\n\\nimport getInjectors from './reducerInjectors';\\n\\n/**\\n * Dynamically injects a reducer\\n *\\n * @param {string} key A key of the reducer\\n * @param {function} reducer A reducer that will be injected\\n *\\n */\\nexport default ({ key, reducer }) => WrappedComponent => {\\n  class ReducerInjector extends React.Component {\\n    static WrappedComponent = WrappedComponent;\\n\\n    static contextType = ReactReduxContext;\\n\\n    static displayName = `withReducer(${WrappedComponent.displayName ||\\n      WrappedComponent.name ||\\n      'Component'})`;\\n\\n    constructor(props, context) {\\n      super(props, context);\\n\\n      getInjectors(context.store).injectReducer(key, reducer);\\n    }\\n\\n    render() {\\n      return <WrappedComponent {...this.props} />;\\n    }\\n  }\\n\\n  return hoistNonReactStatics(ReducerInjector, WrappedComponent);\\n};\\n\\nconst useInjectReducer = ({ key, reducer }) => {\\n  const context = React.useContext(ReactReduxContext);\\n  React.useEffect(() => {\\n    getInjectors(context.store).injectReducer(key, reducer);\\n  }, []);\\n};\\n\\nexport { useInjectReducer };\\n\",\"export const RESTART_ON_REMOUNT = '@@saga-injector/restart-on-remount';\\nexport const DAEMON = '@@saga-injector/daemon';\\nexport const ONCE_TILL_UNMOUNT = '@@saga-injector/once-till-unmount';\\n\",\"import invariant from 'invariant';\\nimport { isEmpty, isFunction, isString, conformsTo } from 'lodash';\\n\\nimport checkStore from './checkStore';\\nimport { DAEMON, ONCE_TILL_UNMOUNT, RESTART_ON_REMOUNT } from './constants';\\n\\nconst allowedModes = [RESTART_ON_REMOUNT, DAEMON, ONCE_TILL_UNMOUNT];\\n\\nconst checkKey = key =>\\n  invariant(\\n    isString(key) && !isEmpty(key),\\n    '(app/utils...) injectSaga: Expected `key` to be a non empty string',\\n  );\\n\\nconst checkDescriptor = descriptor => {\\n  const shape = {\\n    saga: isFunction,\\n    mode: mode => isString(mode) && allowedModes.includes(mode),\\n  };\\n  invariant(\\n    conformsTo(descriptor, shape),\\n    '(app/utils...) injectSaga: Expected a valid saga descriptor',\\n  );\\n};\\n\\nexport function injectSagaFactory(store, isValid) {\\n  return function injectSaga(key, descriptor = {}, args) {\\n    if (!isValid) checkStore(store);\\n\\n    const newDescriptor = {\\n      ...descriptor,\\n      mode: descriptor.mode || DAEMON,\\n    };\\n    const { saga, mode } = newDescriptor;\\n\\n    checkKey(key);\\n    checkDescriptor(newDescriptor);\\n\\n    let hasSaga = Reflect.has(store.injectedSagas, key);\\n\\n    if (process.env.NODE_ENV !== 'production') {\\n      const oldDescriptor = store.injectedSagas[key];\\n      // enable hot reloading of daemon and once-till-unmount sagas\\n      if (hasSaga && oldDescriptor.saga !== saga) {\\n        oldDescriptor.task.cancel();\\n        hasSaga = false;\\n      }\\n    }\\n\\n    if (\\n      !hasSaga ||\\n      (hasSaga && mode !== DAEMON && mode !== ONCE_TILL_UNMOUNT)\\n    ) {\\n      /* eslint-disable no-param-reassign */\\n      store.injectedSagas[key] = {\\n        ...newDescriptor,\\n        task: store.runSaga(saga, args),\\n      };\\n      /* eslint-enable no-param-reassign */\\n    }\\n  };\\n}\\n\\nexport function ejectSagaFactory(store, isValid) {\\n  return function ejectSaga(key) {\\n    if (!isValid) checkStore(store);\\n\\n    checkKey(key);\\n\\n    if (Reflect.has(store.injectedSagas, key)) {\\n      const descriptor = store.injectedSagas[key];\\n      if (descriptor.mode && descriptor.mode !== DAEMON) {\\n        descriptor.task.cancel();\\n        // Clean up in production; in development we need `descriptor.saga` for hot reloading\\n        if (process.env.NODE_ENV === 'production') {\\n          // Need some value to be able to detect `ONCE_TILL_UNMOUNT` sagas in `injectSaga`\\n          store.injectedSagas[key] = 'done'; // eslint-disable-line no-param-reassign\\n        }\\n      }\\n    }\\n  };\\n}\\n\\nexport default function getInjectors(store) {\\n  checkStore(store);\\n\\n  return {\\n    injectSaga: injectSagaFactory(store, true),\\n    ejectSaga: ejectSagaFactory(store, true),\\n  };\\n}\\n\",\"import React from 'react';\\nimport hoistNonReactStatics from 'hoist-non-react-statics';\\nimport { ReactReduxContext } from 'react-redux';\\n\\nimport getInjectors from './sagaInjectors';\\n\\n/**\\n * Dynamically injects a saga, passes component's props as saga arguments\\n *\\n * @param {string} key A key of the saga\\n * @param {function} saga A root saga that will be injected\\n * @param {string} [mode] By default (constants.DAEMON) the saga will be started\\n * on component mount and never canceled or started again. Another two options:\\n *   - constants.RESTART_ON_REMOUNT — the saga will be started on component mount and\\n *   cancelled with `task.cancel()` on component unmount for improved performance,\\n *   - constants.ONCE_TILL_UNMOUNT — behaves like 'RESTART_ON_REMOUNT' but never runs it again.\\n *\\n */\\nexport default ({ key, saga, mode }) => WrappedComponent => {\\n  class InjectSaga extends React.Component {\\n    static WrappedComponent = WrappedComponent;\\n\\n    static contextType = ReactReduxContext;\\n\\n    static displayName = `withSaga(${WrappedComponent.displayName ||\\n      WrappedComponent.name ||\\n      'Component'})`;\\n\\n    constructor(props, context) {\\n      super(props, context);\\n\\n      this.injectors = getInjectors(context.store);\\n\\n      this.injectors.injectSaga(key, { saga, mode }, this.props);\\n    }\\n\\n    componentWillUnmount() {\\n      this.injectors.ejectSaga(key);\\n    }\\n\\n    render() {\\n      return <WrappedComponent {...this.props} />;\\n    }\\n  }\\n\\n  return hoistNonReactStatics(InjectSaga, WrappedComponent);\\n};\\n\\nconst useInjectSaga = ({ key, saga, mode }) => {\\n  const context = React.useContext(ReactReduxContext);\\n  React.useEffect(() => {\\n    const injectors = getInjectors(context.store);\\n    injectors.injectSaga(key, { saga, mode });\\n\\n    return () => {\\n      injectors.ejectSaga(key);\\n    };\\n  }, []);\\n};\\n\\nexport { useInjectSaga };\\n\",\"import styled from 'styled-components';\\n\\nconst H1 = styled.h1`\\n  font-size: 2em;\\n  margin-bottom: 0.25em;\\n`;\\n\\nexport default H1;\\n\",\"import styled from 'styled-components';\\n\\nconst Ul = styled.ul`\\n  list-style: none;\\n  margin: 0;\\n  padding: 0;\\n  width: 100%;\\n  max-height: 30em;\\n  overflow-y: auto;\\n`;\\n\\nexport default Ul;\\n\",\"import styled from 'styled-components';\\n\\nconst Wrapper = styled.div`\\n  padding: 0;\\n  margin: 30px 0 0 0;\\n  width: 100%;\\n  background-color: white;\\n  border: 1px solid #ccc;\\n  border-radius: 3px;\\n  overflow: hidden;\\n`;\\n\\nexport default Wrapper;\\n\",\"import React from 'react';\\nimport PropTypes from 'prop-types';\\n\\nimport Ul from './Ul';\\nimport Wrapper from './Wrapper';\\n\\nfunction List(props) {\\n  const ComponentToRender = props.component;\\n  let content = <div />;\\n\\n  // If we have items, render them\\n  if (props.items) {\\n    content = props.items.map(item => (\\n      <ComponentToRender key={`item-${item.symbol}`} item={item} />\\n    ));\\n  } else {\\n    // Otherwise render a single component\\n    content = <ComponentToRender />;\\n  }\\n\\n  return (\\n    <Wrapper>\\n      <Ul>{content}</Ul>\\n    </Wrapper>\\n  );\\n}\\n\\nList.propTypes = {\\n  component: PropTypes.elementType.isRequired,\\n  items: PropTypes.array,\\n};\\n\\nexport default List;\\n\",\"import styled from 'styled-components';\\n\\nconst Item = styled.div`\\n  display: flex;\\n  justify-content: space-between;\\n  width: 100%;\\n  height: 100%;\\n  align-items: center;\\n  padding: 13px;\\n`;\\n\\nexport default Item;\\n\",\"import styled from 'styled-components';\\n\\nconst Wrapper = styled.li`\\n  width: 100%;\\n  height: 3em;\\n  display: flex;\\n  align-items: center;\\n  position: relative;\\n  border-top: 1px solid #eee;\\n\\n  &:first-child {\\n    border-top: none;\\n  }\\n`;\\n\\nexport default Wrapper;\\n\",\"import React from 'react';\\nimport PropTypes from 'prop-types';\\n\\nimport Item from './Item';\\nimport Wrapper from './Wrapper';\\n\\nfunction ListItem(props) {\\n  return (\\n    <Wrapper>\\n      <Item>{props.item}</Item>\\n    </Wrapper>\\n  );\\n}\\n\\nListItem.propTypes = {\\n  item: PropTypes.any,\\n};\\n\\nexport default ListItem;\\n\",\"import styled from 'styled-components';\\n\\nconst Wrapper = styled.div`\\n  width: 100%;\\n  height: 100%;\\n  display: flex;\\n  align-items: center;\\n  justify-content: space-between;\\n`;\\n\\nexport default Wrapper;\\n\",\"/**\\n * CryptoListItem\\n *\\n * Lists the symbol and the last price of a crypto\\n */\\n\\nimport React from 'react';\\nimport PropTypes from 'prop-types';\\nimport { FormattedNumber } from 'react-intl';\\n\\nimport ListItem from 'components/ListItem';\\nimport Wrapper from './Wrapper';\\n\\nexport function CryptoListItem(props) {\\n  const { item } = props;\\n\\n  // Put together the content of the crypto\\n  const content = (\\n    <Wrapper>\\n      <span>{item.symbol}</span>\\n      <span>\\n        $<FormattedNumber value={item.lastPrice} />\\n      </span>\\n    </Wrapper>\\n  );\\n\\n  // Render the content into a list item\\n  return <ListItem key={`crypto-list-item-${item.symbol}`} item={content} />;\\n}\\n\\nCryptoListItem.propTypes = {\\n  item: PropTypes.object,\\n};\\n\\nexport default CryptoListItem;\\n\",\"import React from 'react';\\nimport PropTypes from 'prop-types';\\n\\nimport List from 'components/List';\\nimport ListItem from 'components/ListItem';\\nimport LoadingIndicator from 'components/LoadingIndicator';\\nimport CryptoListItem from 'containers/CryptoListItem';\\n\\nfunction CryptoList({ loading, error, cryptos }) {\\n  if (loading) {\\n    return <List component={LoadingIndicator} />;\\n  }\\n\\n  if (error !== false && error !== null) {\\n    const ErrorComponent = () => (\\n      <ListItem item=\\\"Something went wrong, please try again!\\\" />\\n    );\\n    return <List component={ErrorComponent} />;\\n  }\\n\\n  if (cryptos !== false) {\\n    return <List items={cryptos} component={CryptoListItem} />;\\n  }\\n\\n  return null;\\n}\\n\\nCryptoList.propTypes = {\\n  loading: PropTypes.bool,\\n  error: PropTypes.any,\\n  cryptos: PropTypes.any,\\n};\\n\\nexport default CryptoList;\\n\",\"/*\\n * HomeConstants\\n * Each action has a corresponding type, which the reducer knows and picks up on.\\n * To avoid weird typos between the reducer and the actions, we save them as\\n * constants here. We prefix them with 'app/YourComponent' so we avoid\\n * reducers accidentally picking up actions they shouldn't.\\n *\\n * Follow this format:\\n * export const YOUR_ACTION_CONSTANT = 'app/YourContainer/YOUR_ACTION_CONSTANT';\\n */\\n\\nexport const LOAD_CRYPTOS_ACTION = 'app/HomePage/LOAD_CRYPTOS_ACTION';\\nexport const LOAD_CRYPTOS_SUCCESS_ACTION =\\n  'app/HomePage/LOAD_CRYPTOS_SUCCESS_ACTION';\\nexport const LOAD_CRYPTOS_ERROR_ACTION =\\n  'app/HomePage/LOAD_CRYPTOS_ERROR_ACTION';\\n\\nexport const CRYPTO_SYMBOLS = [\\n  'BTCBUSD',\\n  'ETHBUSD',\\n  'BNBBUSD',\\n  'XRPBUSD',\\n  'DOGEBUSD',\\n  'MATICBUSD',\\n  'SOLBUSD',\\n  'SHIBBUSD',\\n  'APEBUSD',\\n  'NEARBUSD',\\n  'LUNCBUSD',\\n  'LUNABUSD',\\n];\\n\",\"/*\\n * HomeReducer\\n *\\n * The reducer takes care of our data. Using actions, we can\\n * update our application state. To add a new action,\\n * add it to the switch statement in the reducer function\\n *\\n */\\n\\nimport produce from 'immer';\\nimport {\\n  LOAD_CRYPTOS_ACTION,\\n  LOAD_CRYPTOS_SUCCESS_ACTION,\\n  LOAD_CRYPTOS_ERROR_ACTION,\\n} from './constants';\\n\\n// The initial state of the App\\nexport const initialState = {\\n  cryptos: false,\\n  loading: false,\\n  error: false,\\n};\\n\\n/* eslint-disable default-case, no-param-reassign */\\nconst homeReducer = (state = initialState, action) =>\\n  produce(state, draft => {\\n    switch (action.type) {\\n      case LOAD_CRYPTOS_ACTION:\\n        draft.loading = true;\\n        draft.error = null;\\n        break;\\n\\n      case LOAD_CRYPTOS_SUCCESS_ACTION:\\n        draft.cryptos = action.cryptos;\\n        draft.loading = false;\\n        break;\\n\\n      case LOAD_CRYPTOS_ERROR_ACTION:\\n        draft.error = action.error;\\n        draft.loading = false;\\n        break;\\n    }\\n  });\\n\\nexport default homeReducer;\\n\",\"/**\\n * Homepage selectors\\n */\\n\\nimport { createSelector } from 'reselect';\\nimport { initialState } from './reducer';\\n\\nconst selectHome = state => state.home || initialState;\\n\\nconst makeSelectCryptos = () =>\\n  createSelector(\\n    selectHome,\\n    homeState => homeState.cryptos,\\n  );\\n\\nconst makeSelectLoading = () =>\\n  createSelector(\\n    selectHome,\\n    homeState => homeState.loading,\\n  );\\n\\nconst makeSelectError = () =>\\n  createSelector(\\n    selectHome,\\n    homeState => homeState.error,\\n  );\\n\\nexport { selectHome, makeSelectCryptos, makeSelectLoading, makeSelectError };\\n\",\"/*\\n * Home Actions\\n *\\n * Actions change things in your application\\n * Since this boilerplate uses a uni-directional data flow, specifically redux,\\n * we have these actions which are the only way your application interacts with\\n * your application state. This guarantees that your state is up to date and nobody\\n * messes it up weirdly somewhere.\\n *\\n * To add a new Action:\\n * 1) Import your constant\\n * 2) Add a function like this:\\n *    export function yourAction(var) {\\n *        return { type: YOUR_ACTION_CONSTANT, var: var }\\n *    }\\n */\\n\\nimport {\\n  LOAD_CRYPTOS_ACTION,\\n  LOAD_CRYPTOS_SUCCESS_ACTION,\\n  LOAD_CRYPTOS_ERROR_ACTION,\\n} from './constants';\\n\\n/**\\n * Load the cryptos, this action starts the request saga\\n *\\n * @return {object} An action object with a type of LOAD_CRYPTOS_ACTION\\n */\\nexport function loadCryptosAction() {\\n  return {\\n    type: LOAD_CRYPTOS_ACTION,\\n  };\\n}\\n\\n/**\\n * Dispatched when the cryptos are loaded by the request saga\\n *\\n * @param  {array} cryptos The cryptos data\\n *\\n * @return {object}      An action object with a type of LOAD_CRYPTOS_SUCCESS_ACTION passing the cryptos\\n */\\nexport function loadCryptosSuccessAction(cryptos) {\\n  return {\\n    type: LOAD_CRYPTOS_SUCCESS_ACTION,\\n    cryptos,\\n  };\\n}\\n\\n/**\\n * Dispatched when loading the cryptos fails\\n *\\n * @param  {object} error The error\\n *\\n * @return {object}       An action object with a type of LOAD_CRYPTOS_ERROR_ACTION passing the error\\n */\\nexport function loadCryptosErrorAction(error) {\\n  return {\\n    type: LOAD_CRYPTOS_ERROR_ACTION,\\n    error,\\n  };\\n}\\n\",\"/**\\n * Parses the JSON returned by a network request\\n *\\n * @param  {object} response A response from a network request\\n *\\n * @return {object}          The parsed JSON from the request\\n */\\nfunction parseJSON(response) {\\n  if (response.status === 204 || response.status === 205) {\\n    return null;\\n  }\\n  return response.json();\\n}\\n\\n/**\\n * Checks if a network request came back fine, and throws an error if not\\n *\\n * @param  {object} response   A response from a network request\\n *\\n * @return {object|undefined} Returns either the response, or throws an error\\n */\\nfunction checkStatus(response) {\\n  if (response.status >= 200 && response.status < 300) {\\n    return response;\\n  }\\n\\n  const error = new Error(response.statusText);\\n  error.response = response;\\n  throw error;\\n}\\n\\n/**\\n * Requests a URL, returning a promise\\n *\\n * @param  {string} url       The URL we want to request\\n * @param  {object} [options] The options we want to pass to \\\"fetch\\\"\\n *\\n * @return {object}           The response data\\n */\\nexport default function request(url, options) {\\n  return fetch(url, options)\\n    .then(checkStatus)\\n    .then(parseJSON);\\n}\\n\\n/**\\n * Serialize params, returning a promise\\n *\\n * @param  {object} params    The properties we want to pass\\n * @param  {string} prefix    The prefix we want to append\\n *\\n * @return {string}           The serialized string\\n */\\nexport function serialize(params, prefix = '') {\\n  if (!params) return '';\\n  const query = Object.keys(params).reduce((accum, key) => {\\n    const value = params[key];\\n    if (params.constructor === Array) {\\n      // eslint-disable-next-line no-param-reassign\\n      key = `${prefix}[]`;\\n    } else if (params.constructor === Object) {\\n      // eslint-disable-next-line no-param-reassign\\n      key = prefix ? `${prefix}[${key}]` : key;\\n    }\\n\\n    if (value === undefined) {\\n      return accum;\\n    }\\n    if (typeof value === 'object') {\\n      const moreParams = serialize(value, key);\\n      if (moreParams) accum.push(moreParams);\\n    } else {\\n      accum.push(`${key}=${encodeURIComponent(value)}`);\\n    }\\n    return accum;\\n  }, []);\\n  return query.join('&');\\n}\\n\",\"/**\\n * Gets the cryptos from Binance\\n */\\n\\nimport { call, put, takeLatest } from 'redux-saga/effects';\\n\\nimport request, { serialize } from 'utils/request';\\n\\nimport { loadCryptosSuccessAction, loadCryptosErrorAction } from './actions';\\nimport { LOAD_CRYPTOS_ACTION, CRYPTO_SYMBOLS } from './constants';\\n\\n/**\\n * Binance cryptos request/response handler\\n */\\nexport function* getCryptos() {\\n  const params = {\\n    symbols: JSON.stringify(CRYPTO_SYMBOLS),\\n  };\\n  const requestURL = `/api/v3/ticker/24hrs?${serialize(params)}`;\\n\\n  try {\\n    // Call our request helper (see 'utils/request')\\n    const cryptos = yield call(request, requestURL);\\n    yield put(loadCryptosSuccessAction(cryptos));\\n  } catch (err) {\\n    yield put(loadCryptosErrorAction(err));\\n  }\\n}\\n\\n/**\\n * Root saga manages watcher lifecycle\\n */\\nexport default function* watchActions() {\\n  // Watches for LOAD_CRYPTOS_ACTION actions and calls getCryptos when one comes in.\\n  // By using `takeLatest` only the result of the latest API call is applied.\\n  // It returns task descriptor (just like fork) so we can continue execution\\n  // It will be cancelled automatically on component unmount\\n  yield takeLatest(LOAD_CRYPTOS_ACTION, getCryptos);\\n}\\n\",\"/*\\n * HomePage\\n *\\n * This is the first thing users see of our App, at the '/' route\\n */\\n\\nimport React, { memo, useEffect } from 'react';\\nimport PropTypes from 'prop-types';\\nimport { Helmet } from 'react-helmet';\\nimport { connect } from 'react-redux';\\nimport { compose } from 'redux';\\nimport { createStructuredSelector } from 'reselect';\\n\\nimport { useInjectReducer } from 'utils/injectReducer';\\nimport { useInjectSaga } from 'utils/injectSaga';\\n\\nimport H1 from 'components/H1';\\nimport CryptoList from 'components/CryptoList';\\n\\nimport {\\n  makeSelectCryptos,\\n  makeSelectLoading,\\n  makeSelectError,\\n} from './selectors';\\nimport { loadCryptosAction } from './actions';\\nimport reducer from './reducer';\\nimport saga from './saga';\\n\\nconst key = 'home';\\n\\nexport function HomePage({ loading, error, cryptos, onLoadCryptos }) {\\n  useInjectReducer({ key, reducer });\\n  useInjectSaga({ key, saga });\\n\\n  useEffect(() => {\\n    onLoadCryptos();\\n  }, []);\\n\\n  const cryptoListProps = {\\n    loading,\\n    error,\\n    cryptos,\\n  };\\n\\n  return (\\n    <article>\\n      <Helmet>\\n        <title>Home Page</title>\\n        <meta\\n          name=\\\"description\\\"\\n          content=\\\"A React.js Boilerplate application homepage\\\"\\n        />\\n      </Helmet>\\n      <H1>Cryptocurrencies</H1>\\n      <CryptoList {...cryptoListProps} />\\n    </article>\\n  );\\n}\\n\\nHomePage.propTypes = {\\n  loading: PropTypes.bool,\\n  error: PropTypes.oneOfType([PropTypes.object, PropTypes.bool]),\\n  cryptos: PropTypes.oneOfType([PropTypes.array, PropTypes.bool]),\\n  onLoadCryptos: PropTypes.func,\\n};\\n\\nconst mapStateToProps = createStructuredSelector({\\n  cryptos: makeSelectCryptos(),\\n  loading: makeSelectLoading(),\\n  error: makeSelectError(),\\n});\\n\\nexport function mapDispatchToProps(dispatch) {\\n  return {\\n    onLoadCryptos: () => dispatch(loadCryptosAction()),\\n  };\\n}\\n\\nconst withConnect = connect(\\n  mapStateToProps,\\n  mapDispatchToProps,\\n);\\n\\nexport default compose(\\n  withConnect,\\n  memo,\\n)(HomePage);\\n\"]}","code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[13],{\"0b8eb3e35929778b339a\":function(e,t,n){\"use strict\";n.r(t);var r=n(\"8af190b70a6bc55c6f1b\"),o=n.n(r),a=(n(\"8a2d1b95e05b6a321e74\"),n(\"0d7f0986bcd2f33d8a2a\")),c=n(\"d7dd51e1bf6bfc2c9c3d\"),i=n(\"ab4cb61bcb2dc161defb\"),u=n(\"a28fc3c963a1d4d1a2e5\"),f=(n(\"5ef9de3df8d92ea0e41c\"),n(\"5fa3f8487e09c6182715\")),d=n.n(f),l=n(\"f3b0ff1628e56352bcbf\"),s=n.n(l),p=n(\"a1cf5d6fa4ed65a6ddd5\"),m=n.n(p),b=n(\"6a4f9c383785f9168266\"),y=n.n(b),v=n(\"d3a850c4000d77bccc89\"),g=n.n(v),h=n(\"f2873ecf7390fe7d7c89\"),S=n.n(h);function j(e){var t={dispatch:s.a,subscribe:s.a,getState:s.a,replaceReducer:s.a,runSaga:s.a,injectedReducers:g.a,injectedSagas:g.a};y()(S()(e,t),\"(app/utils...) injectors: Expected a valid redux store\")}var w=n(\"491cc2e27aa2b4221847\");function O(e,t){return function(n,r){t||j(e),y()(d()(n)&&!m()(n)&&s()(r),\"(app/utils...) injectReducer: Expected `reducer` to be a reducer function\"),Reflect.has(e.injectedReducers,n)&&e.injectedReducers[n]===r||(e.injectedReducers[n]=r,e.replaceReducer(Object(w.a)(e.injectedReducers)))}}function R(e){return j(e),{injectReducer:O(e,!0)}}var x=function(e){var t=e.key,n=e.reducer,r=o.a.useContext(c.ReactReduxContext);o.a.useEffect(function(){R(r.store).injectReducer(t,n)},[])},C=\"@@saga-injector/daemon\",k=\"@@saga-injector/once-till-unmount\";function P(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{},r=Object.keys(n);\"function\"===typeof Object.getOwnPropertySymbols&&(r=r.concat(Object.getOwnPropertySymbols(n).filter(function(e){return Object.getOwnPropertyDescriptor(n,e).enumerable}))),r.forEach(function(t){D(e,t,n[t])})}return e}function D(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}var A=[\"@@saga-injector/restart-on-remount\",C,k],B=function(e){return y()(d()(e)&&!m()(e),\"(app/utils...) injectSaga: Expected `key` to be a non empty string\")},U=function(e){var t={saga:s.a,mode:function(e){return d()(e)&&A.includes(e)}};y()(S()(e,t),\"(app/utils...) injectSaga: Expected a valid saga descriptor\")};function E(e,t){return function(n){var r=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},o=arguments.length>2?arguments[2]:void 0;t||j(e);var a=P({},r,{mode:r.mode||C}),c=a.saga,i=a.mode;B(n),U(a);var u=Reflect.has(e.injectedSagas,n);(!u||u&&i!==C&&i!==k)&&(e.injectedSagas[n]=P({},a,{task:e.runSaga(c,o)}))}}function N(e,t){return function(n){if(t||j(e),B(n),Reflect.has(e.injectedSagas,n)){var r=e.injectedSagas[n];r.mode&&r.mode!==C&&(r.task.cancel(),e.injectedSagas[n]=\"done\")}}}function I(e){return j(e),{injectSaga:E(e,!0),ejectSaga:N(e,!0)}}var _,T=function(e){var t=e.key,n=e.saga,r=e.mode,a=o.a.useContext(c.ReactReduxContext);o.a.useEffect(function(){var e=I(a.store);return e.injectSaga(t,{saga:n,mode:r}),function(){e.ejectSaga(t)}},[])},$=n(\"0b3cb19af78752326f59\"),H=$.b.h1.withConfig({displayName:\"H1\",componentId:\"tncdg6-0\"})([\"font-size:2em;margin-bottom:0.25em;\"]),L=$.b.ul.withConfig({displayName:\"Ul\",componentId:\"mwnq6h-0\"})([\"list-style:none;margin:0;padding:0;width:100%;max-height:30em;overflow-y:auto;\"]),J=$.b.div.withConfig({displayName:\"Wrapper\",componentId:\"sc-1umgotm-0\"})([\"padding:0;margin:30px 0 0 0;width:100%;background-color:white;border:1px solid #ccc;border-radius:3px;overflow:hidden;\"]);function W(e,t,n,r){_||(_=\"function\"===typeof Symbol&&Symbol.for&&Symbol.for(\"react.element\")||60103);var o=e&&e.defaultProps,a=arguments.length-3;if(t||0===a||(t={children:void 0}),t&&o)for(var c in o)void 0===t[c]&&(t[c]=o[c]);else t||(t=o||{});if(1===a)t.children=r;else if(a>1){for(var i=new Array(a),u=0;u<a;u++)i[u]=arguments[u+3];t.children=i}return{$$typeof:_,type:e,key:void 0===n?null:\"\"+n,ref:null,props:t,_owner:null}}var Y=W(\"div\",{});var q,z=function(e){var t=e.component,n=Y;return n=e.items?e.items.map(function(e){return W(t,{item:e},\"item-\".concat(e.symbol))}):W(t,{}),W(J,{},void 0,W(L,{},void 0,n))},F=$.b.div.withConfig({displayName:\"Item\",componentId:\"sc-3y9mie-0\"})([\"display:flex;justify-content:space-between;width:100%;height:100%;align-items:center;padding:13px;\"]),G=$.b.li.withConfig({displayName:\"Wrapper\",componentId:\"euo0oy-0\"})([\"width:100%;height:3em;display:flex;align-items:center;position:relative;border-top:1px solid #eee;&:first-child{border-top:none;}\"]);function M(e,t,n,r){q||(q=\"function\"===typeof Symbol&&Symbol.for&&Symbol.for(\"react.element\")||60103);var o=e&&e.defaultProps,a=arguments.length-3;if(t||0===a||(t={children:void 0}),t&&o)for(var c in o)void 0===t[c]&&(t[c]=o[c]);else t||(t=o||{});if(1===a)t.children=r;else if(a>1){for(var i=new Array(a),u=0;u<a;u++)i[u]=arguments[u+3];t.children=i}return{$$typeof:q,type:e,key:void 0===n?null:\"\"+n,ref:null,props:t,_owner:null}}var X,K=function(e){return M(G,{},void 0,M(F,{},void 0,e.item))},Q=n(\"8e4c85c29cdef1bf8a5f\"),V=n(\"ab039aecd4a1d4fedc0e\"),Z=$.b.div.withConfig({displayName:\"Wrapper\",componentId:\"ws0ab9-0\"})([\"width:100%;height:100%;display:flex;align-items:center;justify-content:space-between;\"]);function ee(e,t,n,r){X||(X=\"function\"===typeof Symbol&&Symbol.for&&Symbol.for(\"react.element\")||60103);var o=e&&e.defaultProps,a=arguments.length-3;if(t||0===a||(t={children:void 0}),t&&o)for(var c in o)void 0===t[c]&&(t[c]=o[c]);else t||(t=o||{});if(1===a)t.children=r;else if(a>1){for(var i=new Array(a),u=0;u<a;u++)i[u]=arguments[u+3];t.children=i}return{$$typeof:X,type:e,key:void 0===n?null:\"\"+n,ref:null,props:t,_owner:null}}var te,ne=function(e){var t=e.item,n=ee(Z,{},void 0,ee(\"span\",{},void 0,t.symbol),ee(\"span\",{},void 0,\"$\",ee(V.FormattedNumber,{value:t.lastPrice})));return ee(K,{item:n},\"crypto-list-item-\".concat(t.symbol))};function re(e,t,n,r){te||(te=\"function\"===typeof Symbol&&Symbol.for&&Symbol.for(\"react.element\")||60103);var o=e&&e.defaultProps,a=arguments.length-3;if(t||0===a||(t={children:void 0}),t&&o)for(var c in o)void 0===t[c]&&(t[c]=o[c]);else t||(t=o||{});if(1===a)t.children=r;else if(a>1){for(var i=new Array(a),u=0;u<a;u++)i[u]=arguments[u+3];t.children=i}return{$$typeof:te,type:e,key:void 0===n?null:\"\"+n,ref:null,props:t,_owner:null}}var oe=re(z,{component:Q.a}),ae=re(K,{item:\"Something went wrong, please try again!\"});var ce=function(e){var t=e.loading,n=e.error,r=e.cryptos;if(t)return oe;if(!1!==n&&null!==n)return re(z,{component:function(){return ae}});return!1!==r?re(z,{items:r,component:ne}):null},ie=n(\"7edf83707012a871cdfb\"),ue=\"app/HomePage/LOAD_CRYPTOS_ACTION\",fe=\"app/HomePage/LOAD_CRYPTOS_SUCCESS_ACTION\",de=\"app/HomePage/LOAD_CRYPTOS_ERROR_ACTION\",le=[\"BTCBUSD\",\"ETHBUSD\",\"BNBBUSD\",\"XRPBUSD\",\"DOGEBUSD\",\"MATICBUSD\",\"SOLBUSD\",\"SHIBBUSD\",\"APEBUSD\",\"NEARBUSD\",\"LUNCBUSD\",\"LUNABUSD\"],se={cryptos:!1,loading:!1,error:!1},pe=function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:se,t=arguments.length>1?arguments[1]:void 0;return Object(ie.a)(e,function(e){switch(t.type){case ue:e.loading=!0,e.error=null;break;case fe:e.cryptos=t.cryptos,e.loading=!1;break;case de:e.error=t.error,e.loading=!1}})},me=function(e){return e.home||se};function be(e){return{type:fe,cryptos:e}}var ye=n(\"d782b72bc5b680c7122c\");function ve(e){return(ve=\"function\"===typeof Symbol&&\"symbol\"===typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&\"function\"===typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?\"symbol\":typeof e})(e)}function ge(e){return 204===e.status||205===e.status?null:e.json()}function he(e){if(e.status>=200&&e.status<300)return e;var t=new Error(e.statusText);throw t.response=e,t}function Se(e,t){return fetch(e,t).then(he).then(ge)}function je(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:\"\";return e?Object.keys(e).reduce(function(n,r){var o=e[r];if(e.constructor===Array?r=\"\".concat(t,\"[]\"):e.constructor===Object&&(r=t?\"\".concat(t,\"[\").concat(r,\"]\"):r),void 0===o)return n;if(\"object\"===ve(o)){var a=je(o,r);a&&n.push(a)}else n.push(\"\".concat(r,\"=\").concat(encodeURIComponent(o)));return n},[]).join(\"&\"):\"\"}var we,Oe=regeneratorRuntime.mark(xe),Re=regeneratorRuntime.mark(Ce);function xe(){var e,t,n;return regeneratorRuntime.wrap(function(r){for(;;)switch(r.prev=r.next){case 0:return e={symbols:JSON.stringify(le)},t=\"/api/v3/ticker/24hrs?\".concat(je(e)),r.prev=2,r.next=5,Object(ye.call)(Se,t);case 5:return n=r.sent,r.next=8,Object(ye.put)(be(n));case 8:r.next=14;break;case 10:return r.prev=10,r.t0=r.catch(2),r.next=14,Object(ye.put)((o=r.t0,{type:de,error:o}));case 14:case\"end\":return r.stop()}var o},Oe,null,[[2,10]])}function Ce(){return regeneratorRuntime.wrap(function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,Object(ye.takeLatest)(ue,xe);case 2:case\"end\":return e.stop()}},Re)}function ke(e,t,n,r){we||(we=\"function\"===typeof Symbol&&Symbol.for&&Symbol.for(\"react.element\")||60103);var o=e&&e.defaultProps,a=arguments.length-3;if(t||0===a||(t={children:void 0}),t&&o)for(var c in o)void 0===t[c]&&(t[c]=o[c]);else t||(t=o||{});if(1===a)t.children=r;else if(a>1){for(var i=new Array(a),u=0;u<a;u++)i[u]=arguments[u+3];t.children=i}return{$$typeof:we,type:e,key:void 0===n?null:\"\"+n,ref:null,props:t,_owner:null}}n.d(t,\"HomePage\",function(){return Be}),n.d(t,\"mapDispatchToProps\",function(){return Ee});var Pe=\"home\",De=ke(a.Helmet,{},void 0,ke(\"title\",{},void 0,\"Home Page\"),ke(\"meta\",{name:\"description\",content:\"A React.js Boilerplate application homepage\"})),Ae=ke(H,{},void 0,\"Cryptocurrencies\");function Be(e){var t=e.loading,n=e.error,a=e.cryptos,c=e.onLoadCryptos;x({key:Pe,reducer:pe}),T({key:Pe,saga:Ce}),Object(r.useEffect)(function(){c()},[]);var i={loading:t,error:n,cryptos:a};return ke(\"article\",{},void 0,De,Ae,o.a.createElement(ce,i))}var Ue=Object(u.b)({cryptos:Object(u.a)(me,function(e){return e.cryptos}),loading:Object(u.a)(me,function(e){return e.loading}),error:Object(u.a)(me,function(e){return e.error})});function Ee(e){return{onLoadCryptos:function(){return e({type:ue})}}}var Ne=Object(c.connect)(Ue,Ee);t.default=Object(i.compose)(Ne,r.memo)(Be)}}]);","extractedComments":[]}